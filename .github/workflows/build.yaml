name: Build and Push Images for Release Branches

on:
  push:
    branches:
      - 'release-*'  # Trigger khi push đến branch release-*, bao gồm khi sync tạo branch mới
  workflow_dispatch:  # Cho phép chạy manual nếu cần

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}  # Checkout branch hiện tại (release-*)

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'  # Dựa trên repo gốc; chỉnh nếu thay đổi

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make git curl jq  # Cơ bản
          # Install operator-sdk (version dựa trên repo gốc, ví dụ v1.33)
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/v1.33.0/operator-sdk_linux_amd64
          chmod +x operator-sdk_linux_amd64
          sudo mv operator-sdk_linux_amd64 /usr/local/bin/operator-sdk
          # Install opm (cho catalog)
          curl -LO https://github.com/operator-framework/operator-package-manager/releases/download/v1.27.0/opm-v1.27.0-linux-amd64
          chmod +x opm-v1.27.0-linux-amd64
          sudo mv opm-v1.27.0-linux-amd64 /usr/local/bin/opm
          # Install Docker (nếu chưa có)
          sudo apt-get install -y docker.io
          sudo systemctl start docker

      - name: Docker login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}  # Ví dụ quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Set environment variables
        run: |
          # Extract IMAGE_TAG từ branch name, ví dụ release-4.19 -> 4.19
          IMAGE_TAG=$(echo ${{ github.ref_name }} | sed 's/release-//')
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "REGISTRY_NAMESPACE=${{ secrets.REGISTRY_NAMESPACE }}" >> $GITHUB_ENV

      - name: Build and push odf-operator image
        run: |
          export REGISTRY_NAMESPACE=${{ env.REGISTRY_NAMESPACE }}
          export IMAGE_TAG=${{ env.IMAGE_TAG }}
          make docker-build docker-push

      - name: Build and push operator bundle image
        run: |
          export REGISTRY_NAMESPACE=${{ env.REGISTRY_NAMESPACE }}
          export IMAGE_TAG=${{ env.IMAGE_TAG }}
          make bundle-build bundle-push

      - name: Build and push operator catalog image
        run: |
          export REGISTRY_NAMESPACE=${{ env.REGISTRY_NAMESPACE }}
          export IMAGE_TAG=${{ env.IMAGE_TAG }}
          make catalog-build catalog-push

      - name: Clean up
        run: echo "Build completed for tag ${{ env.IMAGE_TAG }}"
